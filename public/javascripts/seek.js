(function (_0x5839ad, _0x1a5305) {
  const _0x1eaf55 = _0x485c,
    _0x1ea5df = _0x5839ad();
  while (!![]) {
    try {
      const _0x2a579f =
        (-parseInt(_0x1eaf55(0x113)) / 0x1) *
          (parseInt(_0x1eaf55(0x118)) / 0x2) +
        (-parseInt(_0x1eaf55(0x115)) / 0x3) *
          (parseInt(_0x1eaf55(0x11d)) / 0x4) +
        -parseInt(_0x1eaf55(0x11c)) / 0x5 +
        -parseInt(_0x1eaf55(0x11a)) / 0x6 +
        (parseInt(_0x1eaf55(0x114)) / 0x7) *
          (parseInt(_0x1eaf55(0x119)) / 0x8) +
        (-parseInt(_0x1eaf55(0x11b)) / 0x9) *
          (-parseInt(_0x1eaf55(0x11f)) / 0xa) +
        parseInt(_0x1eaf55(0x117)) / 0xb;
      if (_0x2a579f === _0x1a5305) break;
      else _0x1ea5df["push"](_0x1ea5df["shift"]());
    } catch (_0x296a8d) {
      _0x1ea5df["push"](_0x1ea5df["shift"]());
    }
  }
})(_0x3043, 0xbd3d3);
let address = 0x0,
  save_data = null;
function setAddress(_0x374da) {
  address = _0x374da;
}
function seek(_0x2f196e) {
  const _0x1becce = _0x485c,
    _0x4be19d = convertLittle(
      save_data[_0x1becce(0x112)](address, address + _0x2f196e)
    );
  return setAddress(address + _0x2f196e), _0x4be19d;
}
function convertLittle(_0x34e6ee) {
  const _0x395e28 = _0x485c;
  let _0x271e78 = 0x0;
  for (
    let _0x10cb0c = 0x0;
    _0x10cb0c < _0x34e6ee[_0x395e28(0x11e)];
    _0x10cb0c++
  ) {
    _0x271e78 += _0x34e6ee[_0x10cb0c] << (0x8 * _0x10cb0c);
  }
  return _0x271e78;
}
function getTimeStamp(_0x51a956) {
  if (_0x51a956) seek(0x1);
  seek(0x4), seek(0x4), seek(0x4), seek(0x4), seek(0x4), seek(0x4);
}
function _0x3043() {
  const _0x11577e = [
    "Could\x20not\x20find\x20date",
    "15111976wWnJQC",
    "66xAajkk",
    "220392UjXBVC",
    "286062nXYKbT",
    "12325347MsVzpt",
    "1828075RjJAfV",
    "4VUSpyk",
    "length",
    "10GUPPAQ",
    "slice",
    "16894NHhRLz",
    "7ssWmsX",
    "3074793CoSsKF",
  ];
  _0x3043 = function () {
    return _0x11577e;
  };
  return _0x3043();
}
function getData(_0x428742 = 0x4, _0x1b92b4 = 0x4, _0x4197ac = null) {
  const _0x175876 = [];
  if (_0x4197ac === null) _0x4197ac = seek(_0x428742);
  for (let _0x38ce13 = 0x0; _0x38ce13 < _0x4197ac; _0x38ce13++) {
    _0x175876["push"](seek(_0x1b92b4));
  }
  return _0x175876;
}
function seekVar() {
  let _0x10e5a2 = 0x0;
  for (let _0x409bab = 0x0; _0x409bab < 0x4; _0x409bab++) {
    const _0x378915 = _0x10e5a2 << 0x7,
      _0x3d7a6f = seek(0x1);
    _0x10e5a2 = _0x378915 | (_0x3d7a6f & 0x7f);
    if ((_0x3d7a6f & 0x80) === 0x0) return _0x10e5a2;
  }
  return _0x10e5a2;
}
function _0x485c(_0x30bb31, _0xe68c8d) {
  const _0x30437f = _0x3043();
  return (
    (_0x485c = function (_0x485ccb, _0x12b519) {
      _0x485ccb = _0x485ccb - 0x112;
      let _0x3c5cb2 = _0x30437f[_0x485ccb];
      return _0x3c5cb2;
    }),
    _0x485c(_0x30bb31, _0xe68c8d)
  );
}
function findDate() {
  const _0x194374 = _0x485c;
  for (let _0x311ce2 = 0x0; _0x311ce2 < 0x64; _0x311ce2++) {
    const _0x32f4f0 = seek(0x4);
    if (_0x32f4f0 >= 0x7d0 && _0x32f4f0 <= 0xbb8) return address - 0x4;
  }
  throw new Error(_0x194374(0x116));
}
function getDst(_0x448952, _0xcaf80e) {
  let _0x529b98 = ![];
  if (_0x448952[_0xcaf80e] >= 0xf && _0x448952[_0xcaf80e] <= 0x14)
    _0x529b98 = !![];
  else {
    if (_0x448952[_0xcaf80e - 0x1] >= 0xf && _0x448952[_0xcaf80e - 0x1] <= 0x14)
      _0x529b98 = ![];
  }
  return _0x529b98;
}
function parseSave(_0x51357e, _0x4fc6fc, _0x395c67 = null) {
  setAddress(0x0),
    (save_data = _0x51357e),
    seek(0x4),
    seek(0x1),
    seek(0x1),
    seek(0x1),
    seek(0x4),
    seek(0x4);
  const _0x1eabc1 = address,
    _0xeb46e7 = findDate();
  setAddress(_0x1eabc1), seek(_0xeb46e7 - _0x1eabc1);
  if (_0x395c67 === null) _0x395c67 = getDst(_0x51357e, address + 0x76);
  seek(0x4),
    seek(0x4),
    seek(0x4),
    seek(0x4),
    seek(0x4),
    seek(0x4),
    setAddress(address + 0x8),
    seek(0x4),
    seek(0x4),
    seek(0x4);
  if (_0x395c67) seek(0x1);
  getData(0x4, 0x4, 0x3),
    seek(0x4),
    seek(0x4),
    seek(0x4),
    getData(0x4, 0x4, 0xc),
    seek(0x1),
    getData(0x1, 0x4, seek(0x1) * 0xa),
    seek(0x4),
    getData(0x4, 0x4, 0x1e),
    seek(0x4),
    seek(0x4),
    getData(0x4, 0x4, 0xa);
  for (let _0x5c7ab3 = 0x0; _0x5c7ab3 < 0xa; _0x5c7ab3++) seek(0x4);
  for (let _0x406743 = 0x0; _0x406743 < 0xa; _0x406743++) {
    for (let _0x561f65 = 0x0; _0x561f65 < 0x33; _0x561f65++) seek(0x4);
  }
  for (let _0x1d77ed = 0x0; _0x1d77ed < 0xa; _0x1d77ed++) {
    for (let _0x5e3af7 = 0x0; _0x5e3af7 < 0x31; _0x5e3af7++) seek(0x4);
  }
  try {
    const _0x1f7e38 = getData();
    if (_0x1f7e38["length"] === 0x0)
      return parseSave(_0x51357e, _0x4fc6fc, !_0x395c67);
  } catch (_0x29d82f) {
    return parseSave(_0x51357e, _0x4fc6fc, !_0x395c67);
  }
  getData(),
    getData(0x4, 0x2, seek(0x4) * 0x2),
    getData(),
    getData(0x4, 0x2, 0xb * 0x2),
    getData(),
    getData(),
    getData(0x4, 0x4, 0x6),
    getData(),
    seek(0x4),
    getData(0x4, 0x4, 0x15),
    seek(0x1),
    getData(0x1, 0x1, 0x6),
    getTimeStamp(_0x395c67),
    getData(0x4, 0x4, 0x32),
    getTimeStamp(_0x395c67),
    seek(0x6 * 0x4),
    getData(0x4, 0x1, null);
  const _0xbb2e48 = seekVar();
  for (let _0x54a7d5 = 0x0; _0x54a7d5 < _0xbb2e48; _0x54a7d5++) {
    seekVar(), seekVar();
  }
  const _0x575b2c = seekVar();
  for (let _0x26440 = 0x0; _0x26440 < _0x575b2c; _0x26440++) {
    seekVar(), seek(0x1);
  }
  getData(0x4, 0x4, 0x4),
    seek(0x4),
    seek(0x4),
    getData(),
    getData(0x4, 0x4, 0xa);
  let _0x540695 = seek(0x2);
  _0x540695 !== 0x80 && (seek(-0x2), (_0x540695 = 0x64));
  getData(0x2, 0x4, _0x540695), getData(0x2, 0x4, _0x540695);
  const _0x3d9ca0 = seek(0x1),
    _0x416dc2 = seek(0x2) * _0x3d9ca0,
    _0x38aaf2 = seek(0x1),
    _0x3f0ef2 = seek(0x1);
  getData(0x1, 0x1, _0x416dc2 * _0x38aaf2),
    getData(0x1, 0x1, _0x416dc2 * _0x38aaf2),
    getData(0x1, 0x2, _0x416dc2 * _0x3f0ef2 * _0x38aaf2),
    getData(0x1, 0x1, _0x416dc2 * _0x38aaf2),
    getData(0x4, 0x4, 0x26),
    getData();
  const _0x4bfce7 = seek(0x4);
  return _0x4bfce7;
}
