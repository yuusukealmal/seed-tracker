(function (_0x4a1382, _0x2de2a1) {
  const _0x22f6ef = _0x244f,
    _0x4a5783 = _0x4a1382();
  while (!![]) {
    try {
      const _0x2cb610 =
        parseInt(_0x22f6ef(0x74)) / 0x1 +
        -parseInt(_0x22f6ef(0x6d)) / 0x2 +
        (-parseInt(_0x22f6ef(0x72)) / 0x3) *
          (-parseInt(_0x22f6ef(0x71)) / 0x4) +
        parseInt(_0x22f6ef(0x70)) / 0x5 +
        (-parseInt(_0x22f6ef(0x6f)) / 0x6) * (parseInt(_0x22f6ef(0x6e)) / 0x7) +
        parseInt(_0x22f6ef(0x75)) / 0x8 +
        -parseInt(_0x22f6ef(0x73)) / 0x9;
      if (_0x2cb610 === _0x2de2a1) break;
      else _0x4a5783["push"](_0x4a5783["shift"]());
    } catch (_0x15421c) {
      _0x4a5783["push"](_0x4a5783["shift"]());
    }
  }
})(_0x1b1c, 0xbca0e);
function _0x1b1c() {
  const _0x3a2e6f = [
    "1013752UURxRZ",
    "push",
    "1739420FxdGwt",
    "329gAGBHu",
    "20784IInZQt",
    "7614365xiXbls",
    "1463412XVcGlo",
    "9rJctHZ",
    "9069732snJpWT",
    "65737LWDFxt",
  ];
  _0x1b1c = function () {
    return _0x3a2e6f;
  };
  return _0x1b1c();
}
let address = 0x0,
  save_data = null;
function setAddress(_0x136964) {
  address = _0x136964;
}
function seek(_0x4df4c9) {
  const _0x5ce1c6 = convertLittle(
    save_data["slice"](address, address + _0x4df4c9)
  );
  return setAddress(address + _0x4df4c9), _0x5ce1c6;
}
function convertLittle(_0x57a986) {
  let _0x43bfb5 = 0x0;
  for (let _0x2e5b1a = 0x0; _0x2e5b1a < _0x57a986["length"]; _0x2e5b1a++) {
    _0x43bfb5 += _0x57a986[_0x2e5b1a] << (0x8 * _0x2e5b1a);
  }
  return _0x43bfb5;
}
function getTimeStamp(_0x214b1f) {
  if (_0x214b1f) seek(0x1);
  seek(0x4), seek(0x4), seek(0x4), seek(0x4), seek(0x4), seek(0x4);
}
function getData(_0xf0f35f = 0x4, _0x3d4de4 = 0x4, _0x171d44 = null) {
  const _0x12d064 = _0x244f,
    _0x3b86ca = [];
  if (_0x171d44 === null) _0x171d44 = seek(_0xf0f35f);
  for (let _0x289838 = 0x0; _0x289838 < _0x171d44; _0x289838++) {
    _0x3b86ca[_0x12d064(0x6c)](seek(_0x3d4de4));
  }
  return _0x3b86ca;
}
function seekVar() {
  let _0x5e00fc = 0x0;
  for (let _0x3dfa03 = 0x0; _0x3dfa03 < 0x4; _0x3dfa03++) {
    const _0x3f9043 = _0x5e00fc << 0x7,
      _0x1bc3c5 = seek(0x1);
    _0x5e00fc = _0x3f9043 | (_0x1bc3c5 & 0x7f);
    if ((_0x1bc3c5 & 0x80) === 0x0) return _0x5e00fc;
  }
  return _0x5e00fc;
}
function _0x244f(_0x1d1ac5, _0x141b1a) {
  const _0x1b1ce8 = _0x1b1c();
  return (
    (_0x244f = function (_0x244fdb, _0x2a01b6) {
      _0x244fdb = _0x244fdb - 0x6c;
      let _0x22d57d = _0x1b1ce8[_0x244fdb];
      return _0x22d57d;
    }),
    _0x244f(_0x1d1ac5, _0x141b1a)
  );
}
function findDate() {
  for (let _0x18a356 = 0x0; _0x18a356 < 0x64; _0x18a356++) {
    const _0x7d943b = seek(0x4);
    if (_0x7d943b >= 0x7d0 && _0x7d943b <= 0xbb8) return address - 0x4;
  }
}
function getDst(_0x814803, _0x5c276f) {
  let _0x3474f6 = ![];
  if (_0x814803[_0x5c276f] >= 0xf && _0x814803[_0x5c276f] <= 0x14)
    _0x3474f6 = !![];
  else {
    if (_0x814803[_0x5c276f - 0x1] >= 0xf && _0x814803[_0x5c276f - 0x1] <= 0x14)
      _0x3474f6 = ![];
  }
  return _0x3474f6;
}
function parseSave(_0x3ecea7, _0x2475be, _0x55226e = null) {
  setAddress(0x0),
    (save_data = _0x3ecea7),
    seek(0x4),
    seek(0x1),
    seek(0x1),
    seek(0x1),
    seek(0x4),
    seek(0x4);
  const _0x318c2a = address,
    _0x1d9cf9 = findDate();
  setAddress(_0x318c2a), seek(_0x1d9cf9 - _0x318c2a);
  if (_0x55226e === null) _0x55226e = getDst(_0x3ecea7, address + 0x76);
  seek(0x4),
    seek(0x4),
    seek(0x4),
    seek(0x4),
    seek(0x4),
    seek(0x4),
    setAddress(address + 0x8),
    seek(0x4),
    seek(0x4),
    seek(0x4);
  if (_0x55226e) seek(0x1);
  getData(0x4, 0x4, 0x3),
    seek(0x4),
    seek(0x4),
    seek(0x4),
    getData(0x4, 0x4, 0xc),
    seek(0x1),
    getData(0x1, 0x4, seek(0x1) * 0xa),
    seek(0x4),
    getData(0x4, 0x4, 0x1e),
    seek(0x4),
    seek(0x4),
    getData(0x4, 0x4, 0xa);
  for (let _0xad5fd0 = 0x0; _0xad5fd0 < 0xa; _0xad5fd0++) seek(0x4);
  for (let _0x27f5dc = 0x0; _0x27f5dc < 0xa; _0x27f5dc++) {
    for (let _0x37f424 = 0x0; _0x37f424 < 0x33; _0x37f424++) seek(0x4);
  }
  for (let _0x48863e = 0x0; _0x48863e < 0xa; _0x48863e++) {
    for (let _0x9bd760 = 0x0; _0x9bd760 < 0x31; _0x9bd760++) seek(0x4);
  }
  try {
    const _0x2d921a = getData();
    if (_0x2d921a["length"] === 0x0)
      return parseSave(_0x3ecea7, _0x2475be, !_0x55226e);
  } catch (_0x33053d) {
    return parseSave(_0x3ecea7, _0x2475be, !_0x55226e);
  }
  getData(),
    getData(0x4, 0x2, seek(0x4) * 0x2),
    getData(),
    getData(0x4, 0x2, 0xb * 0x2),
    getData(),
    getData(),
    getData(0x4, 0x4, 0x6),
    getData(),
    seek(0x4),
    getData(0x4, 0x4, 0x15),
    seek(0x1),
    getData(0x1, 0x1, 0x6),
    getTimeStamp(_0x55226e),
    getData(0x4, 0x4, 0x32),
    getTimeStamp(_0x55226e),
    seek(0x6 * 0x4),
    getData(0x4, 0x1, null);
  const _0x3764cb = seekVar();
  for (let _0x5c6930 = 0x0; _0x5c6930 < _0x3764cb; _0x5c6930++) {
    seekVar(), seekVar();
  }
  const _0x4ae650 = seekVar();
  for (let _0x58e20d = 0x0; _0x58e20d < _0x4ae650; _0x58e20d++) {
    seekVar(), seek(0x1);
  }
  getData(0x4, 0x4, 0x4),
    seek(0x4),
    seek(0x4),
    getData(),
    getData(0x4, 0x4, 0xa);
  let _0x5305c1 = seek(0x2);
  _0x5305c1 !== 0x80 && (seek(-0x2), (_0x5305c1 = 0x64));
  getData(0x2, 0x4, _0x5305c1), getData(0x2, 0x4, _0x5305c1);
  const _0x21d4cf = seek(0x1),
    _0x3484c3 = seek(0x2) * _0x21d4cf,
    _0x62e411 = seek(0x1),
    _0x1a000a = seek(0x1);
  getData(0x1, 0x1, _0x3484c3 * _0x62e411),
    getData(0x1, 0x1, _0x3484c3 * _0x62e411),
    getData(0x1, 0x2, _0x3484c3 * _0x1a000a * _0x62e411),
    getData(0x1, 0x1, _0x3484c3 * _0x62e411),
    getData(0x4, 0x4, 0x26),
    getData();
  const _0x18897f = seek(0x4);
  return _0x18897f;
}
